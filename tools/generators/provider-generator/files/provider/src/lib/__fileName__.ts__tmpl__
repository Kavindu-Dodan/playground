import {
  EvaluationContext,
  FlagEvaluationOptions,
  Provider,
  ResolutionDetails,
} from '@openfeature/openfeature-js';

/**
 * NOTE: This is an unofficial provider that was created for demonstration
 * purposes only. The playground environment will be updated to use official
 * providers once they're available.
 */
export class <%= libClassName %> implements Provider {
  
  name = '<%= name %>';
  
  resolveBooleanEvaluation(flagKey: string, defaultValue: boolean, transformedContext: EvaluationContext, options: FlagEvaluationOptions | undefined): Promise<ResolutionDetails<boolean>> {
    throw new Error('Method not implemented.');
  }

  resolveStringEvaluation(flagKey: string, defaultValue: string, transformedContext: EvaluationContext, options: FlagEvaluationOptions | undefined): Promise<ResolutionDetails<string>> {
    throw new Error('Method not implemented.');
  }

  resolveNumberEvaluation(flagKey: string, defaultValue: number, transformedContext: EvaluationContext, options: FlagEvaluationOptions | undefined): Promise<ResolutionDetails<number>> {
    throw new Error('Method not implemented.');
  }

  resolveObjectEvaluation<U extends object>(flagKey: string, defaultValue: U, transformedContext: EvaluationContext, options: FlagEvaluationOptions | undefined): Promise<ResolutionDetails<U>> {
    throw new Error('Method not implemented.');
  }
}